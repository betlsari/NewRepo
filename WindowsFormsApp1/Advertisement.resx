<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        F4IkEAoO4oyeqCCATA5IXeKCCACK8gggP//Z
</value>
  </data>
</root>